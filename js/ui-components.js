// js/ui-components.js

/** –õ–æ–∞–¥–µ—Ä */
export function createLoader(text = '–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ‚Ä¶') {
  const box = document.createElement('div');
  box.className = 'd-flex align-items-center gap-2 my-3';
  box.innerHTML = `
    <div class="spinner-border" role="status" aria-hidden="true"></div>
    <span>${text}</span>
  `;
  return box;
}

/**
 * –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä —Å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º.
 * @param {number} value - –µ—Å–ª–∏ widthMode='percent' —ç—Ç–æ –ø—Ä–æ—Ü–µ–Ω—Ç—ã (0..100), –∏–Ω–∞—á–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è
 * @param {{
 *   size?: 'department'|'user',
 *   widthMode?: 'percent'|'points100', // —á–µ–º –∑–∞–¥–∞—ë–º —à–∏—Ä–∏–Ω—É –±–∞—Ä–∞
 *   widthPoints?: number,              // –±–∞–ª–ª—ã 0..100 –¥–ª—è —à–∏—Ä–∏–Ω—ã, –µ—Å–ª–∏ points100
 *   iconMode?: 'percent'|'points',     // —á–µ–º –≤—ã–±–∏—Ä–∞–µ–º –∏–∫–æ–Ω–∫—É
 *   iconValue?: number                 // –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∏–∫–æ–Ω–∫–∏ (–ø—Ä–æ—Ü–µ–Ω—Ç—ã –∏–ª–∏ –±–∞–ª–ª—ã)
 * }} opts
 */
export function createProgressBar(value, opts = {}) {
  const {
    size = 'department',
    widthMode = 'percent',
    widthPoints,
    iconMode = 'percent',
    iconValue
  } = opts;

  // –≤—ã—á–∏—Å–ª—è–µ–º —à–∏—Ä–∏–Ω—É
  const widthPercent = widthMode === 'points100'
    ? clampPercent(Number(widthPoints ?? iconValue ?? 0)) // 0..100 –±–∞–ª–ª–æ–≤ == 0..100%
    : clampPercent(value);

  const wrapper = document.createElement('div');
  wrapper.classList.add(`progress-${size}`, 'mb-3');

  // bar
  const bar = document.createElement('div');
  bar.classList.add('progress');

  const inner = document.createElement('div');
  inner.classList.add('progress-bar');
  inner.setAttribute('role', 'progressbar');
  inner.style.width = `${widthPercent}%`;
  inner.setAttribute('aria-valuenow', String(widthPercent));
  inner.setAttribute('aria-valuemin', '0');
  inner.setAttribute('aria-valuemax', '100');

  // —Ü–≤–µ—Ç –ø–æ –ø–æ—Ä–æ–≥–∞–º (–ø–æ –±–∞–ª–ª–∞–º, –µ—Å–ª–∏ widthMode='points100', –∏–Ω–∞—á–µ –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º)
  const color = (widthMode === 'points100')
    ? colorByPoints(Number(widthPoints ?? iconValue ?? 0))
    : colorByPercent(widthPercent);
  inner.style.backgroundColor = color;

  bar.appendChild(inner);

  // character
  const charRow = document.createElement('div');
  charRow.classList.add('kpi-char-row');

  const track = document.createElement('div');
  track.classList.add('kpi-char-track');
  track.style.width = `${widthPercent}%`;
  track.style.textAlign = 'right';

  const img = createCharacterImage({
    mode: iconMode,
    value: Number(iconValue ?? (iconMode === 'percent' ? widthPercent : 0))
  });
  track.appendChild(img);
  charRow.appendChild(track);

  wrapper.append(bar, charRow);
  return wrapper;
}

/* ---------- helpers ---------- */

function clampPercent(v) {
  const n = Number(v) || 0;
  return Math.max(0, Math.min(100, n));
}

// –¶–≤–µ—Ç–∞ –ø–æ –¢–ó:
// ‚â•70 ‚Äî #36B37E, 50‚Äì69 ‚Äî #9fc5e8, 30‚Äì49 ‚Äî #ffd966, 0‚Äì29 ‚Äî #FF0404
function colorByPoints(points) {
  const p = Number(points) || 0;
  if (p >= 70) return '#36B37E';
  if (p >= 50) return '#9fc5e8';
  if (p >= 30) return '#ffd966';
  return '#FF0404';
}
function colorByPercent(percent) {
  const p = Number(percent) || 0;
  if (p >= 70) return '#36B37E';
  if (p >= 50) return '#9fc5e8';
  if (p >= 30) return '#ffd966';
  return '#FF0404';
}

/** –í—ã–±–æ—Ä –∏–∫–æ–Ω–∫–∏ –ø–æ –±–∞–ª–ª–∞–º (–∏–ª–∏ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ) */
function createCharacterImage({ mode, value }) {
  let src = './images/krosh.png';
  let title = '–°—Ç–∞—Ä—Ç (0‚Äì29)';

  const v = Number(value) || 0;
  const isPoints = mode === 'points';

  if ((isPoints && v >= 70) || (!isPoints && v >= 70)) {
    src = './images/nyusha.png'; title = isPoints ? '–ò–∑–æ–±–∏–ª–∏–µ (‚â•70)' : '–ò–∑–æ–±–∏–ª–∏–µ (‚â•70%)';
  } else if ((isPoints && v >= 50) || (!isPoints && v >= 50)) {
    src = './images/karkarych-sovunya.png'; title = isPoints ? '–ú–∏–Ω–∏–º—É–º, —á—Ç–æ–±—ã –≤—ã–∂–∏—Ç—å (50‚Äì69)' : '–ú–∏–Ω–∏–º—É–º, —á—Ç–æ–±—ã –≤—ã–∂–∏—Ç—å (50‚Äì69%)';
  } else if ((isPoints && v >= 30) || (!isPoints && v >= 30)) {
    src = './images/kopatych.png'; title = isPoints ? '–ó–∏–º–∞ –≤–ø—Ä–æ–≥–æ–ª–æ–¥—å (30‚Äì49)' : '–ó–∏–º–∞ –≤–ø—Ä–æ–≥–æ–ª–æ–¥—å (30‚Äì49%)';
  } else {
    src = './images/krosh.png'; title = isPoints ? '–°—Ç–∞—Ä—Ç (0‚Äì29)' : '–°—Ç–∞—Ä—Ç (0‚Äì29%)';
  }

  const img = document.createElement('img');
  img.width = 64;
  img.height = 64;
  img.alt = 'KPI Character';
  img.decoding = 'async';
  img.loading = 'lazy';
  img.src = src;
  img.title = title;

  img.onerror = () => {
    const fallback = document.createElement('span');
    fallback.style.fontSize = '28px';
    fallback.textContent = v >= 70 ? 'üëë' : v >= 50 ? 'üçµ' : v >= 30 ? 'ü•ï' : 'üê∞';
    img.replaceWith(fallback);
  };

  return img;
}

/** –¢–∞–±–ª–∏—Ü–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ */
export function createUsersTable(users) {
  const safe = Array.isArray(users) ? users : [];
  if (!safe.length) {
    const info = document.createElement('div');
    info.className = 'text-secondary my-2';
    info.textContent = '–ù–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å —Ä–æ–ª—å—é employee –∏–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö.';
    return info;
  }

  const table = document.createElement('table');
  table.classList.add('table', 'table-striped');

  const thead = document.createElement('thead');
  thead.innerHTML = `
    <tr>
      <th>–ò–º—è</th>
      <th>–ë–∞–ª–ª—ã (–Ω–µ–¥–µ–ª—è)</th>
      <th>–ë–∞–ª–ª—ã (–º–µ—Å—è—Ü)</th>
    </tr>
  `;
  table.appendChild(thead);

  const tbody = document.createElement('tbody');
  safe.forEach(u => {
    const tr = document.createElement('tr');
    tr.innerHTML = `
      <td>${u.name ?? '-'}</td>
      <td>${u.week ?? 0}</td>
      <td>${u.month ?? 0}</td>
    `;
    tbody.appendChild(tr);
  });
  table.appendChild(tbody);

  return table;
}

/** –¢–û–ü-3 –ª–∏–¥–µ—Ä–æ–≤ (–±–µ–∑ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤) */
export function createLeaderboard(users, period = 'week') {
  const safe = Array.isArray(users) ? users : [];
  const sorted = safe
    .slice()
    .sort((a, b) => (b?.[period] ?? 0) - (a?.[period] ?? 0))
    .filter(u => (u?.[period] ?? 0) > 0)
    .slice(0, 3);

  const container = document.createElement('div');
  container.classList.add('leaderboard', 'mb-4');

  if (!sorted.length) {
    const empty = document.createElement('div');
    empty.className = 'text-secondary';
    empty.textContent = '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–µ—Ä–∏–æ–¥.';
    container.appendChild(empty);
    return container;
  }

  sorted.forEach((u, i) => {
    const item = document.createElement('div');
    item.innerHTML = `<strong>${i + 1}. ${u.name ?? '-'}</strong> <span class="text-secondary">${u?.[period] ?? 0}</span>`;
    container.appendChild(item);
  });

  return container;
}
