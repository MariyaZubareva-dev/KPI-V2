// js/ui-components.js

/** –õ–æ–∞–¥–µ—Ä */
export function createLoader(text = '–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ‚Ä¶') {
  const box = document.createElement('div');
  box.className = 'd-flex align-items-center gap-2 my-3';
  box.innerHTML = `
    <div class="spinner-border" role="status" aria-hidden="true"></div>
    <span>${text}</span>
  `;
  return box;
}

/**
 * –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä —Å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º.
 * @param {number} percent    - —à–∏—Ä–∏–Ω–∞ –±–∞—Ä–∞ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö (0..100)
 * @param {{
 *   size?: 'department'|'user',
 *   iconMode?: 'percent'|'points', // –ø–æ —á–µ–º—É –≤—ã–±–∏—Ä–∞—Ç—å –∏–∫–æ–Ω–∫—É
 *   iconValue?: number             // –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–∫–æ–Ω–∫–∏ (–µ—Å–ª–∏ points ‚Äî —ç—Ç–æ –°–´–†–´–ï –±–∞–ª–ª—ã)
 * }} opts
 */
export function createProgressBar(percent, opts = {}) {
  const p = clampPercent(percent);
  const { size = 'department', iconMode = 'percent', iconValue } = opts;

  const wrapper = document.createElement('div');
  wrapper.classList.add(`progress-${size}`, 'mb-3');

  // bar
  const bar = document.createElement('div');
  bar.classList.add('progress');

  const inner = document.createElement('div');
  inner.classList.add('progress-bar', barClassByPercent(p));
  inner.setAttribute('role', 'progressbar');
  inner.style.width = `${p}%`;
  inner.setAttribute('aria-valuenow', String(p));
  inner.setAttribute('aria-valuemin', '0');
  inner.setAttribute('aria-valuemax', '100');
  bar.appendChild(inner);

  // character
  const charRow = document.createElement('div');
  charRow.classList.add('kpi-char-row');

  const track = document.createElement('div');
  track.classList.add('kpi-char-track');
  track.style.width = `${p}%`;
  track.style.textAlign = 'right';

  const img = createCharacterImage({
    mode: iconMode,
    value: iconMode === 'points' ? Number(iconValue || 0) : p
  });
  track.appendChild(img);
  charRow.appendChild(track);

  wrapper.append(bar, charRow);
  return wrapper;
}

function clampPercent(v) {
  const n = Number(v) || 0;
  return Math.max(0, Math.min(100, n));
}

function barClassByPercent(p) {
  if (p < 30) return 'bar-critical'; // –∫—Ä–∞—Å–Ω—ã–π
  if (p < 50) return 'bar-30';       // 30‚Äì49
  if (p < 70) return 'bar-50';       // 50‚Äì69
  return 'bar-70';                   // ‚â•70
}

/** –í—ã–±–æ—Ä –∏–∫–æ–Ω–∫–∏ */
function createCharacterImage({ mode, value }) {
  // value: –µ—Å–ª–∏ mode='percent' ‚Äî –ø—Ä–æ—Ü–µ–Ω—Ç—ã; –µ—Å–ª–∏ 'points' ‚Äî —Å—ã—Ä—ã–µ –±–∞–ª–ª—ã
  let src = './images/krosh.png';
  let title = '–°—Ç–∞—Ä—Ç (0‚Äì29)';

  if (mode === 'points') {
    // –ü–æ—Ä–æ–≥–∏ –ø–æ –±–∞–ª–ª–∞–º: 0‚Äì29 / 30‚Äì49 / 50‚Äì69 / ‚â•70
    if (value >= 70) { src = './images/nyusha.png';            title = '–ò–∑–æ–±–∏–ª–∏–µ (‚â•70)'; }
    else if (value >= 50) { src = './images/karkarych-sovunya.png'; title = '–ú–∏–Ω–∏–º—É–º, —á—Ç–æ–±—ã –≤—ã–∂–∏—Ç—å (50‚Äì69)'; }
    else if (value >= 30) { src = './images/kopatych.png';     title = '–ó–∏–º–∞ –≤–ø—Ä–æ–≥–æ–ª–æ–¥—å (30‚Äì49)'; }
    else { src = './images/krosh.png';                         title = '–°—Ç–∞—Ä—Ç (0‚Äì29)'; }
  } else {
    // –ü–æ—Ä–æ–≥–∏ –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç—É
    if (value >= 70) { src = './images/nyusha.png';            title = '–ò–∑–æ–±–∏–ª–∏–µ (‚â•70%)'; }
    else if (value >= 50) { src = './images/karkarych-sovunya.png'; title = '–ú–∏–Ω–∏–º—É–º, —á—Ç–æ–±—ã –≤—ã–∂–∏—Ç—å (50‚Äì69%)'; }
    else if (value >= 30) { src = './images/kopatych.png';     title = '–ó–∏–º–∞ –≤–ø—Ä–æ–≥–æ–ª–æ–¥—å (30‚Äì49%)'; }
    else { src = './images/krosh.png';                         title = '–°—Ç–∞—Ä—Ç (0‚Äì29%)'; }
  }

  const img = document.createElement('img');
  img.width = 64;
  img.height = 64;
  img.alt = 'KPI Character';
  img.decoding = 'async';
  img.loading = 'lazy';
  img.src = src;
  img.title = title;

  img.onerror = () => {
    const fallback = document.createElement('span');
    fallback.style.fontSize = '28px';
    fallback.textContent = value >= (mode === 'points' ? 70 : 70) ? 'üëë'
      : value >= (mode === 'points' ? 50 : 50) ? 'üçµ'
      : value >= (mode === 'points' ? 30 : 30) ? 'ü•ï'
      : 'üê∞';
    img.replaceWith(fallback);
  };

  return img;
}

/** –¢–∞–±–ª–∏—Ü–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ */
export function createUsersTable(users) {
  const safe = Array.isArray(users) ? users : [];
  if (!safe.length) {
    const info = document.createElement('div');
    info.className = 'text-secondary my-2';
    info.textContent = '–ù–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å —Ä–æ–ª—å—é employee –∏–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö.';
    return info;
  }

  const table = document.createElement('table');
  table.classList.add('table', 'table-striped');

  const thead = document.createElement('thead');
  thead.innerHTML = `
    <tr>
      <th>–ò–º—è</th>
      <th>–ë–∞–ª–ª—ã (–Ω–µ–¥–µ–ª—è)</th>
      <th>–ë–∞–ª–ª—ã (–º–µ—Å—è—Ü)</th>
    </tr>
  `;
  table.appendChild(thead);

  const tbody = document.createElement('tbody');
  safe.forEach(u => {
    const tr = document.createElement('tr');
    tr.innerHTML = `
      <td>${u.name ?? '-'}</td>
      <td>${u.week ?? 0}</td>
      <td>${u.month ?? 0}</td>
    `;
    tbody.appendChild(tr);
  });
  table.appendChild(tbody);

  return table;
}

/** –¢–û–ü-3 –ª–∏–¥–µ—Ä–æ–≤ –±–µ–∑ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ */
export function createLeaderboard(users, period = 'week') {
  const safe = Array.isArray(users) ? users : [];
  const sorted = safe
    .slice()
    .sort((a, b) => (b?.[period] ?? 0) - (a?.[period] ?? 0))
    .filter(u => (u?.[period] ?? 0) > 0)
    .slice(0, 3);

  const container = document.createElement('div');
  container.classList.add('leaderboard', 'mb-4');

  if (!sorted.length) {
    const empty = document.createElement('div');
    empty.className = 'text-secondary';
    empty.textContent = '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–µ—Ä–∏–æ–¥.';
    container.appendChild(empty);
    return container;
  }

  sorted.forEach((u, i) => {
    const item = document.createElement('div');
    item.innerHTML = `<strong>${i + 1}. ${u.name ?? '-'}</strong>  <span class="text-secondary">${u?.[period] ?? 0}</span>`;
    container.appendChild(item);
  });

  return container;
}
