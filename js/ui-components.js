// js/ui-components.js

/** –õ–æ–∞–¥–µ—Ä */
export function createLoader(text = '–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ‚Ä¶') {
  const box = document.createElement('div');
  box.className = 'd-flex align-items-center gap-2 my-3';
  box.innerHTML = `
    <div class="spinner-border" role="status" aria-hidden="true"></div>
    <span>${text}</span>
  `;
  return box;
}

/** –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä —Å –∏–∫–æ–Ω–∫–æ–π-–ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º (–ø–æ % –ø—Ä–æ–≥—Ä–µ—Å—Å–∞) */
export function createProgressBar(percent, size = 'department') {
  const p = Math.max(0, Math.min(100, Number(percent) || 0));

  const wrapper = document.createElement('div');
  wrapper.classList.add(`progress-${size}`, 'mb-3');

  const bar = document.createElement('div');
  bar.classList.add('progress');

  const barInner = document.createElement('div');
  barInner.classList.add('progress-bar', barClassByPercent(p));
  barInner.setAttribute('role', 'progressbar');
  barInner.style.width = `${p}%`;
  barInner.setAttribute('aria-valuenow', String(p));
  barInner.setAttribute('aria-valuemin', '0');
  barInner.setAttribute('aria-valuemax', '100');
  bar.appendChild(barInner);

  const charRow = document.createElement('div');
  charRow.classList.add('kpi-char-row');

  const track = document.createElement('div');
  track.classList.add('kpi-char-track');
  track.style.width = `${p}%`;
  track.style.textAlign = 'right';

  const img = createCharacterImage(p);
  track.appendChild(img);
  charRow.appendChild(track);

  wrapper.append(bar, charRow);
  return wrapper;
}

function barClassByPercent(p) {
  if (p < 30) return 'bar-critical'; // –∫—Ä–∞—Å–Ω—ã–π
  if (p < 50) return 'bar-30';       // 30‚Äì49
  if (p < 70) return 'bar-50';       // 50‚Äì69
  return 'bar-70';                   // ‚â•70
}

function createCharacterImage(percent) {
  const img = document.createElement('img');
  img.width = 64;
  img.height = 64;
  img.alt = 'KPI Character';
  img.decoding = 'async';
  img.loading = 'lazy';

  if (percent < 30) {
    img.src = './images/krosh.png';
    img.title = '–°—Ç–∞—Ä—Ç (0‚Äì29%)';
  } else if (percent < 50) {
    img.src = './images/kopatych.png';
    img.title = '‚â•30% –æ—Ç —Ü–µ–ª–∏';
  } else if (percent < 70) {
    img.src = './images/karkarych-s–æ–≤unya.png';
    img.title = '‚â•50% –æ—Ç —Ü–µ–ª–∏';
  } else {
    img.src = './images/nyusha.png';
    img.title = '‚â•70% –æ—Ç —Ü–µ–ª–∏';
  }

  img.onerror = () => {
    const fallback = document.createElement('span');
    fallback.style.fontSize = '28px';
    if (percent < 30)      fallback.textContent = 'üê∞';
    else if (percent < 50) fallback.textContent = 'ü•ï';
    else if (percent < 70) fallback.textContent = 'üçµ';
    else                   fallback.textContent = 'üëë';
    img.replaceWith(fallback);
  };

  return img;
}

/** –¢–∞–±–ª–∏—Ü–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ (—Å—É–º–º—ã) */
export function createUsersTable(users) {
  const safe = Array.isArray(users) ? users : [];
  if (safe.length === 0) {
    const info = document.createElement('div');
    info.className = 'text-secondary my-2';
    info.textContent = '–ù–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å —Ä–æ–ª—å—é employee –∏–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö.';
    return info;
  }

  const table = document.createElement('table');
  table.classList.add('table', 'table-striped');

  const thead = document.createElement('thead');
  thead.innerHTML = `
    <tr>
      <th>–ò–º—è</th>
      <th>–ë–∞–ª–ª—ã (–Ω–µ–¥–µ–ª—è)</th>
      <th>–ë–∞–ª–ª—ã (–º–µ—Å—è—Ü)</th>
    </tr>
  `;
  table.appendChild(thead);

  const tbody = document.createElement('tbody');
  safe.forEach(u => {
    const tr = document.createElement('tr');
    tr.innerHTML = `
      <td>${u.name ?? '-'}</td>
      <td>${u.week ?? 0}</td>
      <td>${u.month ?? 0}</td>
    `;
    tbody.appendChild(tr);
  });
  table.appendChild(tbody);

  return table;
}

/* ---------- BADGES: –Ω–∞–≥—Ä–∞–¥—ã –ø–æ % –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ ---------- */

export const BADGE_THRESHOLDS = [
  { pct: 100, icon: 'üèÜ', title: '100% —Ü–µ–ª–∏' },
  { pct: 75,  icon: 'ü•á', title: '75%+ —Ü–µ–ª–∏' },
  { pct: 50,  icon: 'ü•à', title: '50%+ —Ü–µ–ª–∏' },
  { pct: 25,  icon: 'ü•â', title: '25%+ —Ü–µ–ª–∏' },
];

export function badgeForPercent(pct) {
  for (const b of BADGE_THRESHOLDS) if (pct >= b.pct) return b;
  return null;
}

export function renderBadge(pct) {
  const b = badgeForPercent(pct);
  if (!b) return null;
  const span = document.createElement('span');
  span.className = 'badge-icon';
  span.textContent = b.icon;
  span.title = b.title;
  return span;
}

/** –¢–û–ü-3 –ª–∏–¥–µ—Ä–æ–≤ —Å –±–µ–π–¥–∂–∞–º–∏ –ø–æ % –æ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –º–∞–∫—Å–∏–º—É–º–∞ */
export function createLeaderboard(employees, mode = 'week', perUserMax = 1) {
  const safe = Array.isArray(employees) ? employees : [];
  const sorted = safe
    .slice()
    .sort((a, b) => {
      const av = mode === 'week' ? Number(a.week || 0) : Number(a.month || 0);
      const bv = mode === 'week' ? Number(b.week || 0) : Number(b.month || 0);
      return bv - av;
    })
    .filter(u => (mode === 'week' ? Number(u.week||0) : Number(u.month||0)) > 0)
    .slice(0, 3);

  const container = document.createElement('div');
  container.classList.add('leaderboard', 'mb-4');

  if (!sorted.length) {
    const empty = document.createElement('div');
    empty.className = 'text-secondary';
    empty.textContent = '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–µ—Ä–∏–æ–¥.';
    container.appendChild(empty);
    return container;
  }

  sorted.forEach((u, i) => {
    const points = mode === 'week' ? Number(u.week || 0) : Number(u.month || 0);
    const pct = perUserMax ? Math.round(points / perUserMax * 100) : 0;

    const row = document.createElement('div');
    row.className = 'd-flex align-items-center gap-2 my-1';

    const name = document.createElement('div');
    name.className = 'fw-bold';
    name.textContent = `${i + 1}. ${u.name ?? '-'}`;

    const meta = document.createElement('div');
    meta.className = 'text-secondary';
    meta.textContent = `${points} ‚Ä¢ ${pct}%`;

    const badge = renderBadge(pct);

    row.append(name, meta);
    if (badge) row.append(badge);
    container.appendChild(row);
  });

  return container;
}
