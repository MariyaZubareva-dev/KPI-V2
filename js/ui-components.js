// js/ui-components.js

/** –õ–æ–∞–¥–µ—Ä */
export function createLoader(text = '–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ‚Ä¶') {
  const box = document.createElement('div');
  box.className = 'd-flex align-items-center gap-2 my-3';
  box.innerHTML = `
    <div class="spinner-border" role="status" aria-hidden="true"></div>
    <span>${text}</span>
  `;
  return box;
}

/**
 * –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä —Å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º –∏ –ø–æ–¥–ø–∏—Å—å—é.
 * –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —à–∏—Ä–∏–Ω–∞ —Ç—Ä–∞–∫—Ç—É–µ—Ç—Å—è –∫–∞–∫ –ø—Ä–æ—Ü–µ–Ω—Ç—ã (0..100).
 * –î–ª—è —Ä–∞–±–æ—Ç—ã –≤ ¬´–±–∞–ª–ª–∞—Ö¬ª (0..100 –±–∞–ª–ª–æ–≤ == 0..100% —à–∏—Ä–∏–Ω—ã) –∏—Å–ø–æ–ª—å–∑—É–π:
 *   createProgressBar(value, { widthMode: 'points100', widthPoints: <0..100>, iconMode: 'points', iconValue: <0..100> })
 *
 * @param {number} value - –µ—Å–ª–∏ widthMode='percent' —ç—Ç–æ –ø—Ä–æ—Ü–µ–Ω—Ç—ã (0..100), –∏–Ω–∞—á–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è
 * @param {{
 *   size?: 'department'|'user',
 *   widthMode?: 'percent'|'points100', // —á–µ–º –∑–∞–¥–∞—ë–º —à–∏—Ä–∏–Ω—É –±–∞—Ä–∞
 *   widthPoints?: number,              // –±–∞–ª–ª—ã 0..100 –¥–ª—è —à–∏—Ä–∏–Ω—ã, –µ—Å–ª–∏ points100
 *   iconMode?: 'percent'|'points',     // —á–µ–º –≤—ã–±–∏—Ä–∞–µ–º –∏–∫–æ–Ω–∫—É/–ø–æ–¥–ø–∏—Å—å
 *   iconValue?: number                 // –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∏–∫–æ–Ω–∫–∏/–ø–æ–¥–ø–∏—Å–∏ (–ø—Ä–æ—Ü–µ–Ω—Ç—ã –∏–ª–∏ –±–∞–ª–ª—ã)
 * }} opts
 */
export function createProgressBar(value, opts = {}) {
  const {
    size = 'department',
    widthMode = 'percent',
    widthPoints,
    iconMode = 'percent',
    iconValue
  } = opts;

  // 1) –®–∏—Ä–∏–Ω–∞ –±–∞—Ä–∞ (–≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö) ‚Äî –∏–∑ ¬´–±–∞–ª–ª–æ–≤¬ª –∏–ª–∏ –∏–∑ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤
  const widthPercent = widthMode === 'points100'
    ? clampPercent(Number(widthPoints ?? iconValue ?? 0)) // 0..100 –±–∞–ª–ª–æ–≤ == 0..100%
    : clampPercent(value);

  // 2) –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–∫–æ–Ω–∫–∏ –∏ –ø–æ–¥–ø–∏—Å–∏
  const iconMetric = Number(iconValue ?? (iconMode === 'percent' ? widthPercent : 0)) || 0;

  // 3) –û–±—ë—Ä—Ç–∫–∞
  const wrapper = document.createElement('div');
  wrapper.classList.add(`progress-${size}`, 'mb-3');

  // 4) –ü–æ–ª–æ—Å–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  const bar = document.createElement('div');
  bar.classList.add('progress');

  const inner = document.createElement('div');
  inner.classList.add('progress-bar');
  inner.setAttribute('role', 'progressbar');
  inner.style.width = `${widthPercent}%`;
  inner.setAttribute('aria-valuenow', String(widthPercent));
  inner.setAttribute('aria-valuemin', '0');
  inner.setAttribute('aria-valuemax', '100');

  // –¶–≤–µ—Ç —Å—Ç—Ä–æ–≥–æ –ø–æ –¢–ó (–ø–æ—Ä–æ–≥–∞–º).
  // –ï—Å–ª–∏ —Ä–∞–±–æ—Ç–∞–µ–º –≤ –º–æ–¥–µ–ª–∏ "–±–∞–ª–ª—ã", —Ç–æ –±–µ—Ä—ë–º —Ü–≤–µ—Ç –ø–æ –±–∞–ª–ª–∞–º, –∏–Ω–∞—á–µ ‚Äî –ø–æ %.
  inner.style.backgroundColor =
    (widthMode === 'points100')
      ? colorByPoints(Number(widthPoints ?? iconValue ?? 0))
      : colorByPercent(widthPercent);

  bar.appendChild(inner);

  // 5) –ò–∫–æ–Ω–∫–∞ + –ø–æ–¥–ø–∏—Å—å, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ –∫ —Ç—Ä–µ–∫—É —à–∏—Ä–∏–Ω—ã
  const charRow = document.createElement('div');
  charRow.classList.add('kpi-char-row');

  const track = document.createElement('div');
  track.classList.add('kpi-char-track');
  track.style.width = `${widthPercent}%`;
  track.style.textAlign = 'right';

  const iconWrap = document.createElement('div');
  iconWrap.style.display = 'inline-flex';
  iconWrap.style.flexDirection = 'column';
  iconWrap.style.alignItems = 'center';

  const img = createCharacterImage({ mode: iconMode, value: iconMetric });
  const caption = document.createElement('div');
  caption.className = 'kpi-char-caption';
  caption.textContent = labelByScore(iconMode === 'points' ? iconMetric : percentToPoints(iconMetric));

  iconWrap.append(img, caption);
  track.appendChild(iconWrap);
  charRow.appendChild(track);

  wrapper.append(bar, charRow);
  return wrapper;
}

/* ---------- helpers ---------- */

function clampPercent(v) {
  const n = Number(v) || 0;
  return Math.max(0, Math.min(100, n));
}

// –ï—Å–ª–∏ –ø—Ä–∏—à–ª–∏ –ø—Ä–æ—Ü–µ–Ω—Ç—ã, –∞ –ø–æ–¥–ø–∏—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ ¬´–±–∞–ª–ª–∞–º 0..100¬ª,
// –º–æ–∂–Ω–æ —Å—á–∏—Ç–∞—Ç—å, —á—Ç–æ –ø—Ä–æ—Ü–µ–Ω—Ç—ã == –±–∞–ª–ª—ã –ø—Ä–∏ —à–∫–∞–ª–µ 0..100.
function percentToPoints(p) {
  return clampPercent(p);
}

// –ü–æ–¥–ø–∏—Å—å –ø–æ –±–∞–ª–ª–∞–º (—Å—Ç—Ä–æ–≥–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¢–ó)
function labelByScore(points0to100) {
  const s = Number(points0to100) || 0;
  if (s >= 70) return '–ò–∑–æ–±–∏–ª–∏–µ';
  if (s >= 50) return '–ú–∏–Ω–∏–º—É–º, —á—Ç–æ–±—ã –≤—ã–∂–∏—Ç—å';
  if (s >= 30) return '–ó–∏–º–∞ –≤–ø—Ä–æ–≥–æ–ª–æ–¥—å';
  return '–°—Ç–∞—Ä—Ç —Å–±–æ—Ä–∞ —É—Ä–æ–∂–∞—è';
}

// –¶–≤–µ—Ç–∞ –ø–æ –¢–ó:
// ‚â•70 ‚Äî #36B37E, 50‚Äì69 ‚Äî #9fc5e8, 30‚Äì49 ‚Äî #ffd966, 0‚Äì29 ‚Äî #FF0404
function colorByPoints(points) {
  const p = Number(points) || 0;
  if (p >= 70) return '#36B37E';
  if (p >= 50) return '#9fc5e8';
  if (p >= 30) return '#ffd966';
  return '#FF0404';
}
function colorByPercent(percent) {
  const p = Number(percent) || 0;
  if (p >= 70) return '#36B37E';
  if (p >= 50) return '#9fc5e8';
  if (p >= 30) return '#ffd966';
  return '#FF0404';
}

/** –í—ã–±–æ—Ä –∏–∫–æ–Ω–∫–∏ –ø–æ ¬´–±–∞–ª–ª–∞–º¬ª (–∏–ª–∏ –ø–æ % ‚Äî –µ—Å–ª–∏ –æ—á–µ–Ω—å –Ω—É–∂–Ω–æ) */
function createCharacterImage({ mode, value }) {
  const v = Number(value) || 0;
  const usePoints = mode === 'points';
  const metric = usePoints ? v : percentToPoints(v);

  let src = './images/krosh.png';
  if (metric >= 70)       src = './images/nyusha.png';
  else if (metric >= 50)  src = './images/karkarych-sovunya.png';
  else if (metric >= 30)  src = './images/kopatych.png';
  else                    src = './images/krosh.png';

  const img = document.createElement('img');
  img.width = 64;
  img.height = 64;
  img.alt = 'KPI Character';
  img.decoding = 'async';
  img.loading = 'lazy';
  img.src = src;
  img.title = labelByScore(metric);

  img.onerror = () => {
    const fallback = document.createElement('span');
    fallback.style.fontSize = '28px';
    fallback.textContent = metric >= 70 ? 'üëë' : metric >= 50 ? 'üçµ' : metric >= 30 ? 'ü•ï' : 'üê∞';
    img.replaceWith(fallback);
  };

  return img;
}

/** –¢–∞–±–ª–∏—Ü–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ */
export function createUsersTable(users) {
  const safe = Array.isArray(users) ? users : [];
  if (!safe.length) {
    const info = document.createElement('div');
    info.className = 'text-secondary my-2';
    info.textContent = '–ù–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å —Ä–æ–ª—å—é employee –∏–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö.';
    return info;
  }

  const table = document.createElement('table');
  table.classList.add('table', 'table-striped');

  const thead = document.createElement('thead');
  thead.innerHTML = `
    <tr>
      <th>–ò–º—è</th>
      <th>–ë–∞–ª–ª—ã (–Ω–µ–¥–µ–ª—è)</th>
      <th>–ë–∞–ª–ª—ã (–º–µ—Å—è—Ü)</th>
    </tr>
  `;
  table.appendChild(thead);

  const tbody = document.createElement('tbody');
  safe.forEach(u => {
    const tr = document.createElement('tr');
    tr.innerHTML = `
      <td>${u.name ?? '-'}</td>
      <td>${u.week ?? 0}</td>
      <td>${u.month ?? 0}</td>
    `;
    tbody.appendChild(tr);
  });
  table.appendChild(tbody);

  return table;
}

/** –¢–û–ü-3 –ª–∏–¥–µ—Ä–æ–≤ (—Ç–æ–ª—å–∫–æ –±–∞–ª–ª—ã, –±–µ–∑ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤) */
export function createLeaderboard(users, period = 'week') {
  const safe = Array.isArray(users) ? users : [];
  const sorted = safe
    .slice()
    .sort((a, b) => (b?.[period] ?? 0) - (a?.[period] ?? 0))
    .filter(u => (u?.[period] ?? 0) > 0)
    .slice(0, 3);

  const container = document.createElement('div');
  container.classList.add('leaderboard', 'mb-4');

  if (!sorted.length) {
    const empty = document.createElement('div');
    empty.className = 'text-secondary';
    empty.textContent = '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–µ—Ä–∏–æ–¥.';
    container.appendChild(empty);
    return container;
  }

  sorted.forEach((u, i) => {
    const item = document.createElement('div');
    item.innerHTML = `<strong>${i + 1}. ${u.name ?? '-'}</strong> <span class="text-secondary">${u?.[period] ?? 0}</span>`;
    container.appendChild(item);
  });

  return container;
}
